mutate(mom.pdf = dbeta(x, shape1 = alpha.hat.mom, shape2 = beta.hat.mom),
mle.pdf = dbeta(x, shape1 = alpha.hat.mle, shape2 = beta.hat.mle))
ggplot() +
geom_histogram(data = data,
aes(x = `Death Rate 2022`, y = after_stat(density)),
breaks = seq(0, 0.025, 0.003)) +
geom_line(data = ggdat.beta,
aes(x = x, y = mom.pdf, color = "MOM"))+
geom_line(data = ggdat.beta,
aes(x = x, y = mle.pdf, color = "MLE"))+
geom_hline() +
theme_bw() +
xlab("Data") +
ylab("Density") +
labs(color = "")
# Task 8
simus = 1000
n = 266
alpha = 8
beta = 950
mom.alpha = numeric(simus)
mom.beta = numeric(simus)
mle.alpha = numeric(simus)
mle.beta = numeric(simus)
for (i in 1:simus){
set.seed(7272 + i)
sample = rbeta(n, alpha, beta)
mom = nleqslv(x = c(2,5), fn = MOM.beta, data = sample)
mle = optim(par = c(2,5), fn = MLE.beta, data = sample)
mom.alpha[i] = mom$x[1]
mom.beta[i] = mom$x[2]
mle.alpha[i] = mle$par[1]
mle.beta[i] = mle$par[2]
}
estimates = data.frame(mom.alpha, mom.beta, mle.alpha, mle.beta)
summary(estimates)
view(estimates)
p1 = ggplot(estimates, aes(x = mom.alpha)) +
geom_density(fill = "red") +
ggtitle("MOM Alpha") +
theme_minimal()
p2 = ggplot(estimates, aes(x = mom.beta)) +
geom_density(fill = "blue") +
ggtitle("MOM Beta") +
theme_minimal()
p3 = ggplot(estimates, aes(x = mle.alpha)) +
geom_density(fill = "green") +
ggtitle("MLE Alpha") +
theme_minimal()
p4 = ggplot(estimates, aes(x = mle.beta)) +
geom_density(fill = "purple") +
ggtitle("MLE Beta") +
theme_minimal()
(p1 | p2) / (p3 | p4)
metrics = function(estimate, true){
bias  = mean(estimate) - true
precision = 1 - var(estimate)
mse = var(estimate) + bias^2
c(Bias = bias, Precision = precision, MSE = mse)
}
sum = rbind(
metrics(mom.alpha, alpha),
metrics(mom.beta, beta),
metrics(mle.alpha, alpha),
metrics(mle.beta, beta)
) |> as.data.frame()
view(sum)
ggplot() +
geom_histogram(data = data,
aes(x = `Death Rate 2022`, y = after_stat(density)),
breaks = seq(0, 0.025, 0.003)) +
geom_line(data = ggdat.beta,
aes(x = x, y = mom.pdf, color = "MOM"))+
geom_line(data = ggdat.beta,
aes(x = x, y = mle.pdf, color = "MLE"))+
geom_hline() +
theme_bw() +
xlab("Data") +
ylab("Density") +
labs(color = "")
ggplot() +
geom_histogram(data = data,
aes(x = `Death Rate 2022`, y = after_stat(density)),
breaks = seq(0, 0.025, 0.003)) +
geom_line(data = ggdat.beta,
aes(x = x, y = mom.pdf, color = "MOM"))+
geom_line(data = ggdat.beta,
aes(x = x, y = mle.pdf, color = "MLE"))+
geom_hline() +
theme_bw() +
xlab("Data") +
ylab("Density") +
labs(color = "")
ggplot() +
geom_histogram(data = data,
aes(x = `Death Rate 2022`, y = after_stat(density)),
breaks = seq(0, 0.025, 0.003)) +
geom_line(data = ggdat.beta,
aes(x = x, y = mom.pdf, color = "MOM"))+
geom_line(data = ggdat.beta,
aes(x = x, y = mle.pdf, color = "MLE"))+
geom_hline() +
theme_bw() +
xlab("Data") +
ylab("Density") +
labs(color = "")
###################
# MOM
###################
MOM.beta = function(par, data){
alpha = par[1]
beta = par[2]
EX1 = alpha / (alpha + beta)
m1 = mean(data)
EX2 = ((alpha + 1) * alpha) / ((alpha + beta + 1) * (alpha + beta))
m2 = mean(data^2)
return(c(EX1 - m1, EX2 - m2)) # Goal: find lambda so this is 0
}
nleqslv(x = c(2,5), # guess
fn = MOM.beta,
data=data$`Death Rate 2022`)
alpha.hat.mom = mom$x[1]
beta.hat.mom = mom$x[2]
###################
# MLE
###################
MLE.beta = function(par, data, neg=FALSE){
alpha = par[1]
beta = par[2]
loglik = sum(dbeta(x=data, shape1  = alpha, shape2 = beta, log = TRUE))
return(ifelse(neg, -loglik, loglik))
}
# help(optim)
mle = optim(par = c(2,5),
fn = MLE.beta,
data=data$`Death Rate 2022`,
neg = TRUE)
alpha.hat.mle = mle$par[1]
beta.hat.mle = mle$par[2]
# help(dbeta)
ggdat.beta = tibble(x = seq(0, 0.025, length.out = 1000)) |>
mutate(mom.pdf = dbeta(x, shape1 = alpha.hat.mom, shape2 = beta.hat.mom),
mle.pdf = dbeta(x, shape1 = alpha.hat.mle, shape2 = beta.hat.mle))
ggplot() +
geom_histogram(data = data,
aes(x = `Death Rate 2022`, y = after_stat(density)),
breaks = seq(0, 0.025, 0.003)) +
geom_line(data = ggdat.beta,
aes(x = x, y = mom.pdf, color = "MOM"))+
geom_line(data = ggdat.beta,
aes(x = x, y = mle.pdf, color = "MLE"))+
geom_hline() +
theme_bw() +
xlab("Data") +
ylab("Density") +
labs(color = "")
library(nleqslv)
###################
# MOM
###################
MOM.beta = function(par, data){
alpha = par[1]
beta = par[2]
EX1 = alpha / (alpha + beta)
m1 = mean(data)
EX2 = ((alpha + 1) * alpha) / ((alpha + beta + 1) * (alpha + beta))
m2 = mean(data^2)
return(c(EX1 - m1, EX2 - m2)) # Goal: find lambda so this is 0
}
nleqslv(x = c(2,5), # guess
fn = MOM.beta,
data=data$`Death Rate 2022`)
alpha.hat.mom = mom$x[1]
beta.hat.mom = mom$x[2]
###################
# MLE
###################
MLE.beta = function(par, data, neg=FALSE){
alpha = par[1]
beta = par[2]
loglik = sum(log(dbeta(x=data, shape1  = alpha, shape2 = beta)))
return(ifelse(neg, -loglik, loglik))
}
# help(optim)
mle = optim(par = c(2,5),
fn = MLE.beta,
data=data$`Death Rate 2022`,
neg = TRUE)
alpha.hat.mle = mle$par[1]
beta.hat.mle = mle$par[2]
# help(dbeta)
ggdat.beta = tibble(x = seq(0, 0.025, length.out = 1000)) |>
mutate(mom.pdf = dbeta(x, shape1 = alpha.hat.mom, shape2 = beta.hat.mom),
mle.pdf = dbeta(x, shape1 = alpha.hat.mle, shape2 = beta.hat.mle))
ggplot() +
geom_histogram(data = data,
aes(x = `Death Rate 2022`, y = after_stat(density)),
breaks = seq(0, 0.025, 0.003)) +
geom_line(data = ggdat.beta,
aes(x = x, y = mom.pdf, color = "MOM"))+
geom_line(data = ggdat.beta,
aes(x = x, y = mle.pdf, color = "MLE"))+
geom_hline() +
theme_bw() +
xlab("Data") +
ylab("Density") +
labs(color = "")
ggplot() +
geom_histogram(data = data,
aes(x = `Death Rate 2022`, y = after_stat(density)),
breaks = seq(0, 0.025, 0.003)) +
geom_line(data = ggdat.beta,
aes(x = x, y = mom.pdf, color = "MOM"))+
geom_line(data = ggdat.beta,
aes(x = x, y = mle.pdf, color = "MLE"))+
geom_hline() +
theme_bw() +
xlab("Data") +
ylab("Density") +
labs(color = "")
ggplot() +
geom_histogram(data = data,
aes(x = `Death Rate 2022`, y = after_stat(density)),
breaks = seq(0, 0.025, 0.003)) +
geom_line(data = ggdat.beta,
aes(x = x, y = mom.pdf, color = "MOM"))+
geom_line(data = ggdat.beta,
aes(x = x, y = mle.pdf, color = "MLE"))+
geom_hline() +
theme_bw() +
xlab("Data") +
ylab("Density") +
labs(color = "")
ggplot() +
geom_histogram(data = data,
aes(x = `Death Rate 2022`, y = after_stat(density)),
breaks = seq(0, 0.025, 0.003)) +
geom_line(data = ggdat.beta,
aes(x = x, y = mom.pdf, color = "MOM"))+
geom_line(data = ggdat.beta,
aes(x = x, y = mle.pdf, color = "MLE"))+
geom_hline() +
theme_bw() +
xlab("Data") +
ylab("Density") +
labs(color = "")
mom = nleqslv(x = c(2,5), # guess
fn = MOM.beta,
data=data$`Death Rate 2022`)
alpha.hat.mom = mom$x[1]
beta.hat.mom = mom$x[2]
###################
# MLE
###################
MLE.beta = function(par, data, neg=FALSE){
alpha = par[1]
beta = par[2]
loglik = sum(log(dbeta(x=data, shape1  = alpha, shape2 = beta)))
return(ifelse(neg, -loglik, loglik))
}
# help(optim)
mle = optim(par = c(2,5),
fn = MLE.beta,
data=data$`Death Rate 2022`,
neg = TRUE)
alpha.hat.mle = mle$par[1]
beta.hat.mle = mle$par[2]
# help(dbeta)
ggdat.beta = tibble(x = seq(0, 0.025, length.out = 1000)) |>
mutate(mom.pdf = dbeta(x, shape1 = alpha.hat.mom, shape2 = beta.hat.mom),
mle.pdf = dbeta(x, shape1 = alpha.hat.mle, shape2 = beta.hat.mle))
ggplot() +
geom_histogram(data = data,
aes(x = `Death Rate 2022`, y = after_stat(density)),
breaks = seq(0, 0.025, 0.003)) +
geom_line(data = ggdat.beta,
aes(x = x, y = mom.pdf, color = "MOM"))+
geom_line(data = ggdat.beta,
aes(x = x, y = mle.pdf, color = "MLE"))+
geom_hline() +
theme_bw() +
xlab("Data") +
ylab("Density") +
labs(color = "")
view(sum)
simus = 1000
n = 266
alpha = 8
beta = 950
mom.alpha = numeric(simus)
mom.beta = numeric(simus)
mle.alpha = numeric(simus)
mle.beta = numeric(simus)
for (i in 1:simus){
set.seed(7272 + i)
sample = rbeta(n, alpha, beta)
mom = nleqslv(x = c(2,5), fn = MOM.beta, data = sample)
mle = optim(par = c(2,5), fn = MLE.beta, data = sample)
mom.alpha[i] = mom$x[1]
mom.beta[i] = mom$x[2]
mle.alpha[i] = mle$par[1]
mle.beta[i] = mle$par[2]
}
(p1 | p2) / (p3 | p4)
for (i in 1:simus){
set.seed(7272 + i)
sample = rbeta(n, alpha, beta)
mom = nleqslv(x = c(8,950), fn = MOM.beta, data = sample)
mle = optim(par = c(8,950), fn = MLE.beta, data = sample)
mom.alpha[i] = mom$x[1]
mom.beta[i] = mom$x[2]
mle.alpha[i] = mle$par[1]
mle.beta[i] = mle$par[2]
}
(p1 | p2) / (p3 | p4)
simus = 1000
n = 266
alpha = 8
beta = 950
mom.alpha = numeric(simus)
mom.beta = numeric(simus)
mle.alpha = numeric(simus)
mle.beta = numeric(simus)
for (i in 1:simus){
set.seed(7272 + i)
sample = rbeta(n, alpha, beta)
mom = nleqslv(x = c(8,950), fn = MOM.beta, data = sample)
mle = optim(par = c(8,950), fn = MLE.beta, data = sample)
mom.alpha[i] = mom$x[1]
mom.beta[i] = mom$x[2]
mle.alpha[i] = mle$par[1]
mle.beta[i] = mle$par[2]
}
estimates = data.frame(mom.alpha, mom.beta, mle.alpha, mle.beta)
summary(estimates)
view(estimates)
p1 = ggplot(estimates, aes(x = mom.alpha)) +
geom_density(fill = "red") +
ggtitle("MOM Alpha") +
theme_minimal()
p2 = ggplot(estimates, aes(x = mom.beta)) +
geom_density(fill = "blue") +
ggtitle("MOM Beta") +
theme_minimal()
p3 = ggplot(estimates, aes(x = mle.alpha)) +
geom_density(fill = "green") +
ggtitle("MLE Alpha") +
theme_minimal()
p4 = ggplot(estimates, aes(x = mle.beta)) +
geom_density(fill = "purple") +
ggtitle("MLE Beta") +
theme_minimal()
(p1 | p2) / (p3 | p4)
simus = 1000
n = 266
alpha = 8
beta = 950
mom.alpha = numeric(simus)
mom.beta = numeric(simus)
mle.alpha = numeric(simus)
mle.beta = numeric(simus)
for (i in 1:simus){
set.seed(7272 + i)
sample = rbeta(n, alpha, beta)
mom = nleqslv(x = c(2,5), fn = MOM.beta, data = sample)
mle = optim(par = c(2,5), fn = MLE.beta, data = sample)
mom.alpha[i] = mom$x[1]
mom.beta[i] = mom$x[2]
mle.alpha[i] = mle$par[1]
mle.beta[i] = mle$par[2]
}
estimates = data.frame(mom.alpha, mom.beta, mle.alpha, mle.beta)
summary(estimates)
view(estimates)
p1 = ggplot(estimates, aes(x = mom.alpha)) +
geom_density(fill = "red") +
ggtitle("MOM Alpha") +
theme_minimal()
p2 = ggplot(estimates, aes(x = mom.beta)) +
geom_density(fill = "blue") +
ggtitle("MOM Beta") +
theme_minimal()
p3 = ggplot(estimates, aes(x = mle.alpha)) +
geom_density(fill = "green") +
ggtitle("MLE Alpha") +
theme_minimal()
p4 = ggplot(estimates, aes(x = mle.beta)) +
geom_density(fill = "purple") +
ggtitle("MLE Beta") +
theme_minimal()
(p1 | p2) / (p3 | p4)
(p1 | p2) / (p3 | p4)
simus = 1000
n = 266
alpha = 8
beta = 950
mom.alpha = numeric(simus)
mom.beta = numeric(simus)
mle.alpha = numeric(simus)
mle.beta = numeric(simus)
for (i in 1:simus){
set.seed(7272 + i)
sample = rbeta(n, alpha, beta)
mom = nleqslv(x = c(2,5), fn = MOM.beta, data = sample)
mle = optim(par = c(2,5), fn = MLE.beta, data = sample)
mom.alpha[i] = mom$x[1]
mom.beta[i] = mom$x[2]
mle.alpha[i] = mle$par[1]
mle.beta[i] = mle$par[2]
}
estimates = data.frame(mom.alpha, mom.beta, mle.alpha, mle.beta)
summary(estimates)
view(estimates)
p1 = ggplot(estimates, aes(x = mom.alpha)) +
geom_density(fill = "red") +
ggtitle("MOM Alpha") +
theme_minimal()
p2 = ggplot(estimates, aes(x = mom.beta)) +
geom_density(fill = "blue") +
ggtitle("MOM Beta") +
theme_minimal()
p3 = ggplot(estimates, aes(x = mle.alpha)) +
geom_density(fill = "green") +
ggtitle("MLE Alpha") +
theme_minimal()
p4 = ggplot(estimates, aes(x = mle.beta)) +
geom_density(fill = "purple") +
ggtitle("MLE Beta") +
theme_minimal()
(p1 | p2) / (p3 | p4)
dev.off()
p4
hist(estimates$mle.beta)
simus = 1000
n = 266
alpha = 8
beta = 950
mom.alpha = numeric(simus)
mom.beta = numeric(simus)
mle.alpha = numeric(simus)
mle.beta = numeric(simus)
for (i in 1:simus){
set.seed(7272 + i)
sample = rbeta(n, alpha, beta)
mom = nleqslv(x = c(2,5), fn = MOM.beta, data = sample, neg=T)
mle = optim(par = c(2,5), fn = MLE.beta, data = sample, neg=T)
mom.alpha[i] = mom$x[1]
mom.beta[i] = mom$x[2]
mle.alpha[i] = mle$par[1]
mle.beta[i] = mle$par[2]
}
simus = 1000
n = 266
alpha = 8
beta = 950
mom.alpha = numeric(simus)
mom.beta = numeric(simus)
mle.alpha = numeric(simus)
mle.beta = numeric(simus)
for (i in 1:simus){
set.seed(7272 + i)
sample = rbeta(n, alpha, beta)
mom = nleqslv(x = c(2,5), fn = MOM.beta, data = sample)
mle = optim(par = c(2,5), fn = MLE.beta, data = sample, neg=T)
mom.alpha[i] = mom$x[1]
mom.beta[i] = mom$x[2]
mle.alpha[i] = mle$par[1]
mle.beta[i] = mle$par[2]
}
estimates = data.frame(mom.alpha, mom.beta, mle.alpha, mle.beta)
summary(estimates)
view(estimates)
p1 = ggplot(estimates, aes(x = mom.alpha)) +
geom_density(fill = "red") +
ggtitle("MOM Alpha") +
theme_minimal()
p2 = ggplot(estimates, aes(x = mom.beta)) +
geom_density(fill = "blue") +
ggtitle("MOM Beta") +
theme_minimal()
p3 = ggplot(estimates, aes(x = mle.alpha)) +
geom_density(fill = "green") +
ggtitle("MLE Alpha") +
theme_minimal()
p4 = ggplot(estimates, aes(x = mle.beta)) +
geom_density(fill = "purple") +
ggtitle("MLE Beta") +
theme_minimal()
(p1 | p2) / (p3 | p4)
summary(estimates)
xtable(sum)
install.packages(xtable)
install.packages("xtable")
library(xtable)
xtable(sum)
table(sum)
view(sum)
view(sum)
view(sum)
metrics = function(estimate, true){
bias  = mean(estimate) - true
precision = 1 / var(estimate)
mse = var(estimate) + bias^2
return(c(Bias = bias, Precision = precision, MSE = mse))
}
sum = rbind(
metrics(mom.alpha, alpha),
metrics(mom.beta, beta),
metrics(mle.alpha, alpha),
metrics(mle.beta, beta)
) |> as.data.frame()
view(sum)
